## R Markdown
# Setting up Tidyverse
packages = c("tidyverse", "psych")
for (p in packages){
if(!require(p, character.only = T)) {
install.packages(p)
}
library(p, charactr.only = T)
}
install.packages("tidyverse")
# Setting up Tidyverse
packages = c("tidyverse", "psych")
for (p in packages){
if(!require(p, character.only = T)) {
install.packages(p)
}
library(p, charactr.only = T)
}
# Setting up Tidyverse
packages = c("tidyverse", "psych")
for (p in packages){
if(!require(p, character.only = T)) {
install.packages(p)
}
library(p, character.only = T)
}
# Setting up Tidyverse
packages = c("tidyverse", "psych")
for (p in packages){
if(!require(p, character.only = T)) {
install.packages(p)
}
library(p, character.only = T)
}
realis2019<-read_csv("REALIS2019.csv")
realis2019<-read_csv("REALIS2019.csv")
realis2019<-read_csv("REALIS2019.csv")
realis2019<-read_csv("REALIS2019.csv")
realis2019<-read_csv("REALIS2019.csv")
realis2019<-read_csv("REALIS2019.csv")
realis2019<-read_csv("REALIS2019.csv")
realis2019<-read_csv("REALIS2019.csv")
# import data
'''{r}
realis2019<-read_csv("REALIS2019.csv")
'''
realis2019 <- read_csv("REALIS2019.csv")
```{r setup, include=FALSE}
```{r setup, include=FALSE}
```{r}
popdata_fat <- read_csv("PopData2019_fat.csv")
popdata_long <- popdata_fat %>%
pivot_longer(c(3:21),
names_to = "Age Group",
values_to = "Population")
popdata_fat <- read_csv("PopData2019_fat.csv")
realis2019 <- read_csv("REALIS2019.csv")
popdata_long <- popdata_fat %>%
pivot_longer(c(3:21),
names_to = "Age Group",
values_to = "Population")
view(popdata_long)
knitr::opts_chunk$set(echo = TRUE)
exam <- read_csv("Exam_data.csv")
knitr::opts_chunk$set(echo = TRUE)
packages = c('tidyverse', 'readxl', 'report',
install.packages(p)
packages = c('tidyverse', 'readxl', 'report',
packages = c('tidyverse', 'readxl', 'report',
for(p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p, character.only = T)
}
)
realis2019 <- read_csv("REALIS2019.csv")
if(!require(p, character.only = T)){
install.packages(p)
}
exam <- read_csv("Exam_data.csv")
exam <- read_csv("Exam_data.csv")
exam <- read_csv("data/Exam_data.csv")
exam_data <- read_csv("data/Exam_data.csv")
```{r}
stat -> ggbetweenstats(data=exam_data,x=gender,y=maths)
x=GENDER,
stat -> ggbetweenstats(data=exam_data,
x=GENDER,y=MATHS)
ggbetweenstats(data=exam_data,
x=GENDER,y=MATHS)
install.packages(p)
install.packages(p)
ggbetweenstats(data=exam_data,
x=GENDER,y=MATHS)
if(!require(p, character.only = T)){
install.packages(p)
}
library(p, character.only = T)
packages = c('tidyverse', 'readxl', 'report',
for(p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p, character.only = T)
}
)
ggbetweenstats(data=exam_data,
x=GENDER,y=MATHS)
packages = c('tidyverse', 'readxl', 'report',
for(p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p, character.only = T)
}
```{r}
packages = c('tidyverse', 'readxl', 'report',
for(p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p, character.only = T)
}
)
```{r}
packages = c('tidyverse', 'readxl', 'report',
for(p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p, character.only = T)
}
)
exam_data <- read_csv("data/Exam_data.csv")
packages = c('tidyverse', 'readxl', 'report',
for(p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p, character.only = T)
}
)
packages = c('tidyverse', 'readxl', 'report',
for(p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p, character.only = T)
}
)
packages = c('tidyverse', 'readxl', 'report',
for(p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p, character.only = T)
}
)
```{r}
packages = c('tidyverse', 'readxl', 'report',
for(p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p, character.only = T)
}
)
ggscatterstats(data=exam_data,
x=GENDER,y=MATHS)
packages = c('tidyverse', 'readxl', 'report',
for(p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p, character.only = T)
}
)
packages = c('tidyverse', 'readxl', 'report',
for(p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p, character.only = T)
}
)
``` {r}
exam_data <- read_csv("data/Exam_data.csv")
```{r}
ggscatterstats(data=exam_data,
x=GENDER,y=MATHS)
ggscatterstats(data=exam_data,x=GENDER,y=MATHS)
ggscatterstats(data=exam_data,x=GENDER,y=MATHS)
```{r}
```{r}
help.search("ggscatterstats")
help.search("ggscatterstats")
ggscatterstats(data=exam_data,x=GENDER,y=MATHS)
knitr::opts_chunk$set(echo = TRUE)
You can also embed plots, for example:
```{r pressure, echo=FALSE}
plot(pressure)
```
plot(pressure)
packages = c('tidyverse', 'readxl', 'report',
for(p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p, character.only = T)
}
)
exam_data <- read_csv("data/Exam_data.csv")
ggscatterstats(data=exam_data,x=GENDER,y=MATHS)
help.search("ggscatterstats")
if(!require(p, character.only = T)){
install.packages(p)
}
packages = c('tidyverse', 'readxl', 'report',
for(p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p, character.only = T)
}
)
packages.ggscatterstats(data=exam_data,x=GENDER,y=MATHS)
ggplot(data=exam_data,x=GENDER,y=MATHS)
ggplot(data=exam_data,x=GENDER,y=MATHS)
ggplot(data=exam_data,
aes(y = MATHS, x= GENDER)) +
geom_boxplot() +
geom_point(stat="summary",
fun.y="mean",
colour ="red",
size=4)
packages = c('tidyverse', 'readxl', 'report','ggplot'
for(p in packages){
packages = c('tidyverse', 'readxl', 'report', 'ggplot',
for(p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p, character.only = T)
}
)
packages = c('tidyverse', 'readxl', 'report', 'ggplot2',
for(p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p, character.only = T)
}
)
packages = c('tidyverse', 'readxl', 'report', 'ggplot2',
for(p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p, character.only = T)
}
)
packages = c('tidyverse', 'readxl', 'report','ggstatsplot'
for(p in packages){
packages = c('tidyverse', 'readxl', 'report','ggstatsplot',
for(p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p, character.only = T)
}
)
ggplot(data=exam_data,
aes(y = MATHS, x= GENDER)) +
geom_boxplot() +
geom_point(stat="summary",
fun.y="mean",
colour ="red",
size=4)
ggscatterstats(exam_data,x=GENDER, Y=MATHS)
install.packages(p)
packages = c('tidyverse', 'readxl', 'report','ggstatsplot', 'ggplot'
for(p in packages){
packages = c('tidyverse', 'readxl', 'report','ggstatsplot', 'ggplot',
for(p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p, character.only = T)
}
)
packages = c('tidyverse', 'readxl', 'report'','ggstatsplot', 'ggplot',')
packages = c('tidyverse', 'readxl', 'report'','ggstatsplot', 'ggplot')
packages = c('tidyverse', 'readxl', 'report','ggstatsplot', 'ggplot')
}
install.packages(p)
ggscatterstats(exam_data,x=GENDER, Y=MATHS)
install.packages("ggplot2")
install.packages("ggplot2")
knitr::opts_chunk$set(echo = TRUE)
packages = c('tidyverse', 'readxl', 'report')
if(!require(p, character.only = T)) {
install.packages(p)
}
ggscatterstats(exam_data,x=GENDER, Y=MATHS)
install.packages("ggplot")
library("ggplot2")
install.packages("ggplot")
install.packages("ggplot")
library("ggpolt")
library("ggplot")
packages = c('tidyverse', 'readxl', 'report')
install.packages("ggplot2")
install.packages("ggplot2")
knitr::opts_chunk$set(echo = TRUE)
library("ggplot")
library("ggplot2")
for(p in packages){
for (p in packages){
if(!require(p, character.only = T)) {
install.packages(p)
}
library(p, character.only = T)
}
packages = c('tidyverse', 'readxl', 'report')
for(p in packages){
for (p in packages){
if(!require(p, character.only = T)) {
install.packages(p)
}
library(p, character.only = T)
}
for(p in packages){
for (p in packages){
if(!require(p, character.only = T)) {
install.packages(p)
}
library(p, character.only = T)
}
}
install.packages("ggplot2")
library("ggplot2")
packages = c('tidyverse', 'readxl', 'report')
for(p in packages){
for (p in packages){
if(!require(p, character.only = T)) {
install.packages(p)
}
library(p, character.only = T)
}
}
install.packages("ggplot2")
library("ggplot2")
packages = c('tidyverse', 'readxl', 'report')
for(p in packages){
for (p in packages){
if(!require(p, character.only = T)) {
install.packages(p)
}
library(p, character.only = T)
}
}
if(!require(p, character.only = T)) {
install.packages(p)
}
ggscatterstats(exam_data,x=GENDER, Y=MATHS)
install.packages("ggplot2")
packages = c('tidyverse', 'readxl', 'report')
for(p in packages){
for (p in packages){
if(!require(p, character.only = T)) {
install.packages(p)
}
library(p, character.only = T)
}
}
install.packages("ggplot2")
knitr::opts_chunk$set(echo = TRUE)
ggplot(data=exam_data,
aes(y = MATHS, x= GENDER)) +
geom_boxplot() +
geom_point(stat="summary",
fun.y="mean",
colour ="red",
size=4)
c<-c("g")
c
c<-ggplot("")
c<-df("home",1,"2")
c<-df("home",1,2)
c<-df(1,2)
c<-df(1,2,3)
sessionInfo()
updateR()
installr
shiny::runApp('C:/deadline2359/IS415-Project-App/IS415-Group9')
runApp('C:/deadline2359/IS415-Project-App/IS415-Group9')
runApp('C:/deadline2359/IS415-Project-App/IS415-Group9')
runApp('C:/deadline2359/IS415-Project-App/IS415-Group9')
eldercare_sf <- st_read(dsn = "data/geospatial/eldercare",
layer = "ELDERCARE") %>%
st_transform(crs = 3414)
View(eldercare_sf)
eldercare_sf <- st_read(dsn = "data/geospatial/eldercare",
layer = "ELDERCARE") %>%
st_transform(crs = 3414)
head(eldercare_sf, 5)
length(which(st_is_valid(eldercare_sf) == FALSE))
tm_shape(total_pop) +
tm_polygons(
"Total...2",
style = "cont",
alpha = 0.4) +
tm_shape(eldercare_sf) +
tm_symbols(shape=21,
col  = "green",
size = 0.15) +
tm_layout(main.title="Eldercare",
main.title.position = "center")
pop_data <- read_csv("data/aspatial/Resident Population 2015.csv", skip=11)[1:379,1:19]
pop_data$...1  = toupper(pop_data$...1)
mpsz <- st_make_valid(mpsz)
tmap_mode("plot")
tm_shape(total_pop) +
tm_polygons(
"Total...2",
style = "cont",
alpha = 0.4) +
tm_shape(eldercare_sf) +
tm_symbols(shape=21,
col  = "green",
size = 0.15) +
tm_layout(main.title="Eldercare",
main.title.position = "center")
mpsz <- st_read(dsn = "data/geospatial/MPSZ-2019",
layer = "MPSZ-2019") %>%
st_transform(crs = 3414)
write_rds(mpsz, "data/models/mpsz_original.rds")
pop_data$...1  = toupper(pop_data$...1)
mpsz <- st_make_valid(mpsz)
total_pop <- merge(x = mpsz, y = pop_data, by.x = "SUBZONE_N", by.y = "...1", all.x = TRUE)
saveRDS(total_pop, file = "data/models/total_pop.rds")
tmap_mode("plot")
tm_shape(total_pop) +
tm_polygons(
"Total...2",
style = "cont",
alpha = 0.4) +
tm_shape(eldercare_sf) +
tm_symbols(shape=21,
col  = "green",
size = 0.15) +
tm_layout(main.title="Eldercare",
main.title.position = "center")
tmap_mode("plot")
tm_shape(total_pop) +
tm_polygons(
"Total...2",
style = "cont",
alpha = 0.4) +
tm_shape(eldercare_sf) +
tm_symbols(shape=21,
col  = "green",
size = 0.15) +
tm_layout(main.title="Eldercare",
main.title.position = "center")
pop_data$...1  = toupper(pop_data$...1)
mpsz <- st_make_valid(mpsz)
total_pop <- merge(x = mpsz, y = pop_data, by.x = "SUBZONE_N", by.y = "...1", all.x = TRUE)
saveRDS(total_pop, file = "data/models/total_pop.rds")
pop_data <- read_csv("data/aspatial/Resident Population 2015.csv", skip=11)[1:379,1:19]
pop_is_char <- sapply(pop_data[c(2:19)], is.character)
pop_data[c(2:19)][ , pop_is_char] <- as.data.frame(apply(pop_data[c(2:19)][ , pop_is_char], 2, as.numeric))
pop_data$...1  = toupper(pop_data$...1)
mpsz <- st_make_valid(mpsz)
total_pop <- merge(x = mpsz, y = pop_data, by.x = "SUBZONE_N", by.y = "...1", all.x = TRUE)
saveRDS(total_pop, file = "data/models/total_pop.rds")
tmap_mode("plot")
tm_shape(total_pop) +
tm_polygons(
"Total...2",
style = "cont",
alpha = 0.4) +
tm_shape(eldercare_sf) +
tm_symbols(shape=21,
col  = "green",
size = 0.15) +
tm_layout(main.title="Eldercare",
main.title.position = "center")
saveRDS(total_pop, file = "data/models/eldercare_sf.rds")
runApp('C:/deadline2359/IS415-Project-App/IS415-Group9')
eldercare_sf <- st_intersection(mpsz, eldercare_sf)
saveRDS(eldercare_sf, file = "data/models/eldercare_sf.rds")
runApp('C:/deadline2359/IS415-Project-App/IS415-Group9')
eldercare_spatial <- as_Spatial(eldercare_sf)
eldercare_sp <- as(eldercare_spatial, "SpatialPoints")
eldercare_ppp <- as(eldercare_sp, "ppp")
eldercare_sp <- as(eldercare_spatial, "SpatialPoints")
eldercare_ppp <- as(eldercare_sp, "ppp")
eldercare_ppp <- as(eldercare_sp, "ppp")
eldercare_ppp <- as(eldercare_sp, "ppp")
pacman::p_load(readr, sf, tmap, spatstat, sfdep, tidyverse, maptools, raster, SpatialAcc, ggstatsplot, reshape2, rgdal, spNetwork)
eldercare_ppp <- as(eldercare_sp, "ppp")
plot(eldercare_ppp, main="Eldercares")
any(duplicated(eldercare_ppp))
mpsz_spatial <- as_Spatial(mpsz)
mpsz_sp <- as(mpsz_spatial, "SpatialPolygons")
mpsz_owin <- as(mpsz_sp, "owin")
eldercare_ppp = eldercare_ppp[mpsz_owin]
eldercare_ppp.km <- rescale(eldercare_ppp, 1000, "km")
saveRDS(eldercare_ppp.km, file = "data/models/eldercare_ppp_km.rds")
runApp('C:/deadline2359/IS415-Project-App/IS415-Group9')
